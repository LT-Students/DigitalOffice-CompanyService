{
  "Serilog": {
    "Using": [],
    "LevelSwitches": { "$controlSwitch": "Information" },
    "MinimumLevel": { "ControlledBy": "$controlSwitch" },
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithProcessId",
      "WithThreadId"
    ],
    "WriteTo": [
      {
        "Name": "Console"
      },
      {
        "Name": "Seq",
        "Args": {
          "serverUrl": "http://localhost:5341",
          "apiKey": "sUKXvLyREbJnFMImHRbu"
        }
      }
    ]
  },
  "AllowedHosts": "*",
  "RabbitMQ": {
    //Common
    "DisactivateUserEndpoint": "Common_DisactivateUser",

    // UserService
    "CheckUserIsAdminEndpoint": "UserService_GetUserAdminStatus",
    "GetUsersDataEndpoint": "UserService_GetUsersData",
    "CreateAdminEndpoint": "UserService_CreateAdmin",
    "CheckUsersExistenceEndpoint": "UserService_CheckUsersExistence",

    // CRService
    "CheckUserRightsEndpoint": "CRService_CheckUserRights",

    // AuthService
    "ValidateTokenEndpoint": "AuthService_ValidateToken",

    // ProjectService
    "GetProjectsEndpoint": "ProjectService_GetProjects",

    // CompanyService receiving endpoints
    "GetDepartmentsEndpoint": "CompanyService_GetDepartments",
    "GetDepartmentUsersEndpoint": "CompanyService_GetDepartmentUsers",
    "GetCompanyEmployeesEndpoint": "CompanyService_GetCompanyEmployees",
    "EditCompanyEmployeeEndpoint": "CompanyService_EditCompanyEmployee",
    "GetSmtpCredentialsEndpoint": "CompanyService_GetSmtpCredentialsEndpoint",
    "GetPositionsEndpoint": "CompanyService_GetPositions",
    "CheckDepartmentsExistenceEndpoint": "CompanyService_CheckDepartmentsExistence",
    "SearchDepartmentEndpoint": "CompanyService_SearchDepartment",

    // FileService
    "AddImageEndpoint": "FileService_AddImage",
    "GetImagesEndpoint": "FileService_GetImages",

    // MessageService
    "UpdateSmtpCredentialsEndpoint": "MessageService_UpdateSmtpCredentials"
  },
  "ServiceInfo": {
    "Id": "47EC83DB-F697-4212-AA50-8D10EF1F17BC",
    "Name": "CompanyService"
  },
  "CheckTokenMiddleware": {
    "SkippedEndpoints": [
      "/apiinformation",
      "/company/get",
      "/company/create"
    ]
  }
}
